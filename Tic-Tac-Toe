import random

# --- Game Board Display ---
def display_board(board):
    print("\n")
    print("   |   |   ")
    print(f" {board[1]} | {board[2]} | {board[3]} ")
    print("   |   |   ")
    print("-----------")
    print("   |   |   ")
    print(f" {board[4]} | {board[5]} | {board[6]} ")
    print("   |   |   ")
    print("-----------")
    print("   |   |   ")
    print(f" {board[7]} | {board[8]} | {board[9]} ")
    print("   |   |   ")

# --- Player Input ---
def player_input():
    marker = ''
    while marker not in ['X', 'O']:
        marker = input('Player 1: Do you want to be X or O? ').upper()
    return ('X', 'O') if marker == 'X' else ('O', 'X')

# --- Place Marker ---
def place_marker(board, marker, position):
    board[position] = marker

# --- Check Win ---
def win_check(board, mark):
    return (
        # Horizontals
        (board[7] == mark and board[8] == mark and board[9] == mark) or
        (board[4] == mark and board[5] == mark and board[6] == mark) or
        (board[1] == mark and board[2] == mark and board[3] == mark) or
        # Verticals
        (board[7] == mark and board[4] == mark and board[1] == mark) or
        (board[8] == mark and board[5] == mark and board[2] == mark) or
        (board[9] == mark and board[6] == mark and board[3] == mark) or
        # Diagonals
        (board[7] == mark and board[5] == mark and board[3] == mark) or
        (board[9] == mark and board[5] == mark and board[1] == mark)
    )

# --- Choose First Player ---
def choose_first():
    return 'Player 1' if random.randint(0, 1) == 0 else 'Player 2'

# --- Check Space Availability ---
def space_check(board, position):
    return board[position] == ' '

# --- Check If Board Is Full ---
def full_board_check(board):
    return all(space != ' ' for space in board[1:])

# --- Get Player's Move ---
def player_choice(board):
    position = 0
    while position not in range(1, 10) or not space_check(board, position):
        try:
            position = int(input("Choose your next position (1-9): "))
        except ValueError:
            print("Invalid input! Please enter a number between 1 and 9.")
    return position

# --- Replay Option ---
def replay():
    return input('Do you want to play again? (Yes/No): ').lower().startswith('y')

# --- Main Game Loop ---
print('---Welcome to Tic Tac Toe!---\n')

while True:
    # Reset the board
    theBoard = [' '] * 10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(f"{turn} will go first.\n")

    play_game = input('Are you ready to play? (Yes/No): ').lower()[0]
    game_on = play_game == 'y'

    while game_on:
        # Player 1's Turn
        if turn == 'Player 1':
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard, player1_marker, position)

            if win_check(theBoard, player1_marker):
                display_board(theBoard)
                print('Congratulations! Player 1 wins!\n')
                game_on = False
            elif full_board_check(theBoard):
                display_board(theBoard)
                print("It's a draw!\n")
                break
            else:
                turn = 'Player 2'

        # Player 2's Turn
        else:
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard, player2_marker, position)

            if win_check(theBoard, player2_marker):
                display_board(theBoard)
                print('Congratulations! Player 2 wins!\n')
                game_on = False
            elif full_board_check(theBoard):
                display_board(theBoard)
                print("It's a draw!\n")
                break
            else:
                turn = 'Player 1'

    if not replay():
        print("Thanks for playing! Goodbye.")
        break
